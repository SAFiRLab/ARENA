name: Docker Image CI

on:
  push:
    branches: [main]
    paths:
      - Dockerfile
  pull_request:
    branches: [main]
    paths:
      - Dockerfile
  workflow_dispatch:  # This allows manual triggering

jobs:
  docker-test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker image
      run: |
        docker build -t arena-cuda-ros . --progress=plain

    - name: Run Docker container
      run: |
        docker run -d --name test-container --read-only --user 1000:1000 arena-cuda-ros
        sleep 5  # give time for the container to start
        docker ps -a

    - name: Stop if actor not trusted
      env:
        trusted_deployers: ${{ secrets.TRUSTED_DEPLOYERS }}
      if: github.event_name != 'pull_request' && !contains(fromJSON(env.trusted_deployers), github.actor)
      run: |
        echo "=========================="
        echo "UNTRUSTED ACTOR ${{ github.actor }}. Not deploying."
        echo "=========================="

    - name: Log in to Github Container Registry (GHCR)
      env:
        trusted_deployers: ${{ secrets.TRUSTED_DEPLOYERS }}
      if: github.event_name != 'pull_request' && contains(fromJSON(env.trusted_deployers), github.actor)
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
  
    - name: Tag the image
      env:
        trusted_deployers: ${{ secrets.TRUSTED_DEPLOYERS }}
      if: github.event_name != 'pull_request' && contains(fromJSON(env.trusted_deployers), github.actor)
      run: |
        IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}/arena-cuda-ros" | tr '[:upper:]' '[:lower:]')
        docker tag arena-cuda-ros "$IMAGE_NAME"
  
    - name: Push image
      env:
        trusted_deployers: ${{ secrets.TRUSTED_DEPLOYERS }}
      if: github.event_name != 'pull_request' && contains(fromJSON(env.trusted_deployers), github.actor)
      run: |
        IMAGE_NAME=$(echo "ghcr.io/${{ github.repository }}/arena-cuda-ros" | tr '[:upper:]' '[:lower:]')
        docker push "$IMAGE_NAME"
